GIT
~---------------------------------------------------------------------------------------------------------------------------------------------------

$ git config --global user.name "Sergio"
$ git config --global user.email "tpessoalsp@gmail.com"
$ git config --global core.editor "vscode"
$ git config --list

Para fazer update ao git : git update-git-for-windows

cls = clear

git init - inicializa o repositorio ( a pasta onde 
iniciamos o repositorio, faz com que todos os ficheiros
nela contidos sejam incluidos no mesmo ).

touch nomedoficheiro - Cria o ficheiro

git rm nomedoficheiro - Remove o ficheiro do
sistema e do repositorio

echo " texto que se pretende adicionar" >> nomeDoFicheirodici


git add nomeDoArquivo ( um por um )
git add -A (adiciona todos os arquivos que nao estao rastreados.O A tem de ser Maius
culo)

git commit -m "COmentario do Commit" ( Commit é o envio das modificaçoes efectuadas
nos ficheiros.)

git commit -am "Comentario do Commit" ( am adiciona e comita )

git log ( Mostra todos os commits efetuados. q for exit )


Note: Short status flags are:

?? - Untracked files
A - Files added to stage
M - Modified files
D - Deleted files

git command -help -  See all the available options for the specific

git reset -- soft (os dados ficam inalterados nos ficheiros. Apenas elimina o commit)
		  mixed (os dados ficam inalterados nos ficheiros. Apenas elimina o commit
			    e o add)
 		  hard ( Elimina todas as alteraçoes)

git branch - Mostra todos os branchs existentes ( o que tem o asterisco é
		 o que está a ser usado. )
git branch nomeDoBranch - cria um novo Branch

git checkout nomeDoBranch - Muda para o Branch especificado

git branch -r - indica as branchs remotas disponiveis. -a - indica as remotas e locaisete

git branch -m old-branch-name new-branch-name - Modifica o nome da Branch

git branch -d nomeDaBranch - remove a branch especificada

git diff - exibe as diferenças da versao anterior e a nova
start nomeDoFicheiro - Inicializa o ficheiro

git diff --name-only - Mostra apenas o nome dos arquivos que foram
			     modificados.

git checkout HEAD -- nomeDoFicheiro  - Faz um undo para a versao anterior do arquivo

git merge nomeDaBranch - Funde ads Branch na qual estou a trabalhar com a branch que especifíco

-------------------------------------------------------------------------------------------------

GitHub

git remote add origin urlDoRepositório - Associamos o repo criado no github ao nosso local

git push --set-upstream origin master - Movemos os ficheiros para a branch master do GitHub

git fetch origin - obtém todo o histórico de alterações de um branch/repo rastreado.

git merge origin(doGitHub)/BranchSeleccionada - combina a ramificação atual com uma ramificação especificada.

git pull origin - é uma combinação de fetche merge. Ele é usado para extrair todas as alterações de um repositório remoto
para a ramificação em que você está trabalhando.

Por exemplo, se você quiser apagar a branch "feature-x" do GitHub, use o seguinte 
comando:
git push origin --delete feature-x




